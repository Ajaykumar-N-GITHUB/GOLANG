This is a branch to learn GOLANG



In Go, variable scope determines where a variable can be accessed or modified within the code. Go has different levels of scope, including package-level scope, function-level scope, and block-level scope. Here's a detailed look at each with examples:

1. Package-Level Scope
Variables declared outside of functions, at the package level, are accessible throughout the entire package. They are typically used to define constants, global variables, or package-level configurations.

2. Function-Level Scope
Variables declared inside a function are local to that function. They are not accessible outside of the function in which they are declared.

3. Block-Level Scope
Variables declared inside a block (e.g., within braces {}) are local to that block. This includes blocks within functions, loops, or conditional statements.

4. Shadowing
Variable shadowing occurs when a variable declared within a local scope (e.g., in a function or block) has the same name as a variable in an outer scope. The inner variable "shadows" the outer variable.

5. Short Variable Declarations
Go allows for short variable declarations using the := syntax. This syntax can only be used within functions and automatically determines the variableâ€™s type based on the assigned value.




ajaykumar-n@ANATTUDU-M-R5PC GOLANG % go build
no Go files in /Users/ajaykumar-n/Documents/GOLANG-PROGAMS/GOLANG
ajaykumar-n@ANATTUDU-M-R5PC GOLANG % ls
INTRODUCTION                    Program-2-type_conversion       Program-4-bitwise               Program-6-
Program-1-variables             Program-3-constants             Program-5-scope                 go.mod
ajaykumar-n@ANATTUDU-M-R5PC GOLANG % cd Program-5-scope 
ajaykumar-n@ANATTUDU-M-R5PC Program-5-scope % ls
explorer        main_scope.go
ajaykumar-n@ANATTUDU-M-R5PC Program-5-scope % go build
ajaykumar-n@ANATTUDU-M-R5PC Program-5-scope % ls
Program-5-scope explorer        main_scope.go
ajaykumar-n@ANATTUDU-M-R5PC Program-5-scope % ls -la
total 3984
drwxr-xr-x@  6 ajaykumar-n  staff      192 Aug  8 11:41 .
drwxr-xr-x@ 13 ajaykumar-n  staff      416 Aug  8 10:55 ..
-rw-r--r--@  1 ajaykumar-n  staff     6148 Aug  7 23:05 .DS_Store
-rwxr-xr-x@  1 ajaykumar-n  staff  2027456 Aug  8 11:41 Program-5-scope
drwxr-xr-x@  4 ajaykumar-n  staff      128 Aug  7 19:38 explorer
-rw-r--r--@  1 ajaykumar-n  staff      343 Aug  8 10:55 main_scope.go
ajaykumar-n@ANATTUDU-M-R5PC Program-5-scope % ./Program-5-scope 
7
10
10
i am from explorer -> useme.go
100
100
250
This is from another package
ajaykumar-n@ANATTUDU-M-R5PC Program-5-scope % rm -rf Program-5-scope 
ajaykumar-n@ANATTUDU-M-R5PC Program-5-scope % ls
explorer        main_scope.go
ajaykumar-n@ANATTUDU-M-R5PC Program-5-scope % go env GOOS
darwin
ajaykumar-n@ANATTUDU-M-R5PC Program-5-scope % go env GOARCH
amd64
ajaykumar-n@ANATTUDU-M-R5PC Program-5-scope % GOOS=darwin go build
ajaykumar-n@ANATTUDU-M-R5PC Program-5-scope % ls
Program-5-scope explorer        main_scope.go
ajaykumar-n@ANATTUDU-M-R5PC Program-5-scope % GOOS=linux go build
ajaykumar-n@ANATTUDU-M-R5PC Program-5-scope % ls
Program-5-scope explorer        main_scope.go
ajaykumar-n@ANATTUDU-M-R5PC Program-5-scope % GOOS=windows go build
ajaykumar-n@ANATTUDU-M-R5PC Program-5-scope % ls
Program-5-scope         Program-5-scope.exe     explorer                main_scope.go
ajaykumar-n@ANATTUDU-M-R5PC Program-5-scope % 






ajaykumar-n@ANATTUDU-M-R5PC GOLANG % git add -all
error: did you mean `--all` (with two dashes)?
ajaykumar-n@ANATTUDU-M-R5PC GOLANG % git add --all 
ajaykumar-n@ANATTUDU-M-R5PC GOLANG % git commit -m "sixth"
[main fdcbb88] sixth
 4 files changed, 19 insertions(+), 3 deletions(-)
 create mode 100644 Program-7-tag/main.go
ajaykumar-n@ANATTUDU-M-R5PC GOLANG % git tag
ajaykumar-n@ANATTUDU-M-R5PC GOLANG % git push
Enumerating objects: 13, done.
Counting objects: 100% (13/13), done.
Delta compression using up to 12 threads
Compressing objects: 100% (6/6), done.
Writing objects: 100% (8/8), 972 bytes | 972.00 KiB/s, done.
Total 8 (delta 3), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (3/3), completed with 2 local objects.
To https://github.com/Ajaykumar-N-GITHUB/GOLANG.git
   c4d0d4d..fdcbb88  main -> main
ajaykumar-n@ANATTUDU-M-R5PC GOLANG % git tag V.0.0
ajaykumar-n@ANATTUDU-M-R5PC GOLANG % git push origin --tags
Total 0 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/Ajaykumar-N-GITHUB/GOLANG.git
 * [new tag]         V.0.0 -> V.0.0
ajaykumar-n@ANATTUDU-M-R5PC GOLANG % git tags
git: 'tags' is not a git command. See 'git --help'.

The most similar commands are
        stage
        tag
ajaykumar-n@ANATTUDU-M-R5PC GOLANG % git tag 
V.0.0
ajaykumar-n@ANATTUDU-M-R5PC GOLANG % 